---
name: Vercel PR Deploy (Preview + Production)
permissions:
  contents: read

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: vercel-pr-deploy-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  info-when-missing-secrets:
    if: ${{ !secrets.VERCEL_DEPLOY_HOOK && !secrets.VERCEL_PREVIEW_DEPLOY_HOOK }}
    runs-on: ubuntu-latest
    steps:
      - name: Missing Vercel Deploy Hook secrets
        run: |
          echo "No VERCEL_DEPLOY_HOOK or VERCEL_PREVIEW_DEPLOY_HOOK secrets configured."
          echo "Create Deploy Hooks in your Vercel project (Production and Preview) and add the URLs as repository secrets."
          echo "- VERCEL_DEPLOY_HOOK: Production deploy hook URL"
          echo "- VERCEL_PREVIEW_DEPLOY_HOOK: Preview deploy hook URL (optional, will fallback to production hook)"
          exit 0

  deploy-preview:
    if: ${{ secrets.VERCEL_PREVIEW_DEPLOY_HOOK != '' || secrets.VERCEL_DEPLOY_HOOK != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Vercel Preview Deploy Hook
        env:
          PREVIEW_DEPLOY_HOOK: ${{ secrets.VERCEL_PREVIEW_DEPLOY_HOOK }}
          FALLBACK_DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK }}
        run: |
          set -euo pipefail
          
          # Use preview hook if available, otherwise fallback to production hook
          if [ -n "$PREVIEW_DEPLOY_HOOK" ]; then
            DEPLOY_URL="$PREVIEW_DEPLOY_HOOK"
            DEPLOY_TYPE="preview"
          else
            DEPLOY_URL="$FALLBACK_DEPLOY_HOOK"
            DEPLOY_TYPE="production (fallback)"
          fi
          
          echo "Triggering Vercel deploy hook for $DEPLOY_TYPE environment..."
          echo "PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}"
          
          curl -fsSL -X POST "$DEPLOY_URL"
          echo "Preview deploy hook triggered successfully."

  deploy-production:
    if: ${{ secrets.VERCEL_DEPLOY_HOOK != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Vercel Production Deploy Hook
        env:
          DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK }}
        run: |
          set -euo pipefail
          echo "Triggering Vercel deploy hook for production environment..."
          echo "PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}"
          
          curl -fsSL -X POST "$DEPLOY_HOOK"
          echo "Production deploy hook triggered successfully."